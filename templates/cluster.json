{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "masterPrefix": {
      "type": "string",
      "defaultValue": "master",
      "metadata": {
        "description": "Master node(s) name prefix"
      }
    },
    "masterCount": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "Number of master VM instances (1,3 or 5)"
      },
      "allowedValues": [
        1,
        3,
        5
      ]
    },
    "masterSSHPort": {
      "type": "int",
      "defaultValue": 22,
      "metadata": {
        "description": "Port number for SSH access"
      }
    },
    "masterManagementAllowedSourceAddressPrefixes": {
      "type": "array",
      "defaultValue": ["*"],
      "metadata": {
        "description": "Allowed IP address(es) for SSH access"
      }
    },
    "masterIngressAllowedSourceAddressPrefixes": {
      "type": "array",
      "defaultValue": ["*"],
      "metadata": {
        "description": "Allowed IP address(es) for HTTP(S) access to ingress"
      }
    },
    "masterSize": {
      "type": "string",
      "defaultValue": "Standard_B1ls",
      "metadata": {
        "description": "Master instance size"
      },
      "allowedValues": [
        "Standard_B1ls",
        "Standard_B1ms",
        "Standard_B1s",
        "Standard_B2ms",
        "Standard_B2s",
        "Standard_B4ms",
        "Standard_B8ms",
        "Standard_DS1_v2",
        "Standard_DS2_v2",
        "Standard_DS3_v2",
        "Standard_DS4_v2",
        "Standard_F1",
        "Standard_F2"
      ]
    },
    "agentPrefix": {
      "type": "string",
      "defaultValue": "agents",
      "metadata": {
        "description": "Agent node(s) name prefix"
      }
    },
    "minAgentCount": {
      "type": "int",
      "metadata": {
        "description": "Minimum number of agents"
      },
      "defaultValue": 1,
      "minValue": 1,
      "maxValue": 100
    },
    "maxAgentCount": {
      "type": "int",
      "metadata": {
        "description": "Maximum number of agents"
      },
      "defaultValue": 5,
      "minValue": 1,
      "maxValue": 100
    },
    "agentCount": {
      "type": "int",
      "metadata": {
        "description": "Number of agent VM instances (up to 100"
      },
      "defaultValue": 2,
      "minValue": 1,
      "maxValue": 100
    },
    "agentSize": {
      "type": "string",
      "defaultValue": "Standard_B1ls",
      "metadata": {
        "description": "Agent instance size"
      },
      "allowedValues": [
        "Standard_A1_v2",
        "Standard_A2_v2",
        "Standard_A4_v2",
        "Standard_A8_v2",
        "Standard_A2m_v2",
        "Standard_A4m_v2",
        "Standard_A8m_v2",
        "Standard_B1ls",
        "Standard_DS1_v2",
        "Standard_DS2_v2",
        "Standard_DS3_v2",
        "Standard_DS4_v2",
        "Standard_F1s",
        "Standard_F2s_v2",
        "Standard_F4s_v2",
        "Standard_F8s_v2",
        "Standard_NV6ads_A10_v5"
      ]
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "cluster",
      "metadata": {
        "description": "Admin username on all VMs"
      }
    },
    "adminPublicKey": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "ssh public key for connecting to VMs"
      }
    },
    "masterCustomData": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Base64 encoded, multi-line string to pass to master node cloud-init"
      }
    },
    "agentCustomData": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Base64 encoded, multi-line string to pass to agent node cloud-init"
      }
    },
    "asFDCount": {
      "type": "int",
      "defaultValue": 3,
      "metadata": {
        "description": "Master Availability Set Fault Domains"
      }
    },
    "asUDCount": {
      "type": "int",
      "defaultValue": 5,
      "metadata": {
        "description": "Master Availability Set Update Domains"
      }
    },
    "saType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "Storage account type"
      }
    },
    "diskType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "StandardSSD_LRS",
        "Standard_LRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "OS disk type"
      }
    },
    "diskSizeGB": {
      "type": "int",
      "defaultValue": 32,
      "allowedValues": [
        32,
        64,
        128
      ],
      "metadata": {
        "description": "OS disk size"
      }
    },
    "diagsSASProperties": {
      "type": "object",
      "defaultValue": {
        "signedServices": "bt",
        "signedPermission": "rwlacu",
        "signedStart": "[utcNow('yyyy-MM-ddTHH:mm:ssZ')]",
        "signedExpiry": "[replace(utcNow('yyyy-MM-ddTHH:mm:ssZ'), utcNow('yyyy'), string(add(10,int(utcNow('yyyy')))))]",
        "signedResourceTypes": "co"
      },
      "metadata": {
        "description": "SAS token with 10-year lifetime for Linux diagnostics - currently unused until we re-enable extensions"
      }
    }
  },
  "variables": {
    "managedIdentityName": "[parameters('masterPrefix')]",
    "diagsName": "[toLower(substring(concat('diags0',  uniqueString(resourceGroup().id)), 0, 16))]",
    "virtualMachineContributor": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '9980e02c-c2be-4d73-94e8-173b1dc7cf3c')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('diagsName')]",
      "sku": {
        "name": "[parameters('saType')]"
      },
      "kind": "StorageV2",
      "apiVersion": "2019-04-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "supportsHttpsTrafficOnly": true
      }
    },
    {
      "comments": "Virtual Network",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "cluster",
      "apiVersion": "2017-06-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.0.0.0/8"
          ]
        },
        "subnets": [
          {
            "name": "masters",
            "properties": {
              "addressPrefix": "10.1.0.0/16"
            }
          },
          {
            "name": "agents",
            "properties": {
              "addressPrefix": "10.2.0.0/16"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "name": "[variables('managedIdentityName')]",
      "apiVersion": "2018-11-30",
      "location": "[resourceGroup().location]"
    },
    {
      "comments": "Role assignment as Virtual Machine Contributor to each master instance",
      "apiVersion": "2020-10-01-preview",
      "type": "Microsoft.Authorization/roleAssignments",
      "copy": {
        "name": "[parameters('masterPrefix')]",
        "count": "[parameters('masterCount')]"
      },
      "name": "[guid(concat(parameters('masterPrefix'),copyIndex()))]",
      "properties": {
        "displayName": "[variables('managedIdentityName')]",
        "roleDefinitionId": "[variables('virtualMachineContributor')]",
        "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityName')), '2018-11-30', 'Full').properties.principalId]",
        "scope": "[resourceGroup().id]"
      },
      "dependsOn": [
        "[resourceID('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', parameters('masterPrefix'), copyIndex())]"
      ]
    },
    {
      "comments": "Master Node(s)",
      "type": "Microsoft.Compute/virtualMachines",
      "copy": {
        "name": "[parameters('masterPrefix')]",
        "count": "[parameters('masterCount')]"
      },
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
           "[resourceID('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityName'))]": {}
        }      
      },
      "name": "[concat(parameters('masterPrefix'),copyIndex())]",
      "apiVersion": "2019-03-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "osProfile": {
          "computerName": "[concat(parameters('masterPrefix'),copyIndex())]",
          "adminUsername": "[parameters('adminUsername')]",
          "customData": "[parameters('masterCustomData')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
              "publicKeys": [
                {
                  "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                  "keyData": "[parameters('adminPublicKey')]"
                }
              ]
            }
          }
        },
        "hardwareProfile": {
          "vmSize": "[parameters('masterSize')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "Canonical",
            "offer": "0001-com-ubuntu-server-focal",
            "sku": "20_04-lts-gen2",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(parameters('masterPrefix'),copyIndex())]",
            "managedDisk": {
              "storageAccountType": "[parameters('diskType')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "diskSizeGB": "[parameters('diskSizeGB')]"
          },
          "dataDisks": []
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('masterPrefix'),copyIndex()))]"
            }
          ]
        },
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', 'masters')]"
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[concat('https', '://', variables('diagsName'), '.blob.core.windows.net')]"
          }
        }
      },
      "dependsOn": [
        "[resourceID('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', parameters('masterPrefix'), copyIndex())]",
        "[concat('Microsoft.Compute/availabilitySets/', 'masters')]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('diagsName'))]"
      ]
    },
    {
      "comments": "Agent ScaleSet",
      "type": "Microsoft.Compute/virtualMachineScaleSets",
      "name": "[parameters('agentPrefix')]",
      "location": "[resourceGroup().location]",
      "apiVersion": "2021-11-01",
      "sku": {
        "name": "[parameters('agentSize')]",
        "tier": "Standard",
        "capacity": "[parameters('agentCount')]"
      },
      "properties": {
        "publicIPAllocationMethod": "dynamic",
        "overprovision": false,
        "upgradePolicy": {
          "mode": "Manual"
        },
        "virtualMachineProfile": {
          "priority": "Spot",
          "evictionPolicy": "delete",
          "billingProfile": {
            "maxPrice": -1
          },
          "osProfile": {
            "computerNamePrefix": "[parameters('agentPrefix')]",
            "adminUsername": "[parameters('adminUsername')]",
            "customData": "[parameters('agentCustomData')]",
            "linuxConfiguration": {
              "disablePasswordAuthentication": true,
              "ssh": {
                "publicKeys": [
                  {
                    "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                    "keyData": "[parameters('adminPublicKey')]"
                  }
                ]
              }
            }
          },
          "extensionProfile": {
            "extensions": [
            ]
          },
          "storageProfile": {
            "osDisk": {
              "managedDisk": {
                "storageAccountType": "[parameters('diskType')]"
              },
              "caching": "ReadWrite",
              "createOption": "FromImage",
              "diskSizeGB": "[parameters('diskSizeGB')]"
            },
            "imageReference": {
              "publisher": "Canonical",
              "offer": "0001-com-ubuntu-server-focal",
              "sku": "20_04-lts-gen2",
              "version": "latest"
            }
          },
          "diagnosticsProfile": {
            "bootDiagnostics": {
              "enabled": true,
              "storageUri": "[concat('https', '://', variables('diagsName'), '.blob.core.windows.net')]"
            }
          },
          "networkProfile": {
            "networkInterfaceConfigurations": [
              {
                "name": "[parameters('agentPrefix')]",
                "properties": {
                  "primary": true,
                  "ipConfigurations": [
                    {
                      "name": "[concat(parameters('agentPrefix'),'IpConfig')]",
                      "properties": {
                        "subnet": {
                          "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/virtualNetworks/', 'cluster', '/subnets/', 'agents')]"
                        }
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('diagsName'))]"
      ]
    },
    {
      "comments": "Autoscale Settings",
      "type": "microsoft.insights/autoscalesettings",
      "name": "[parameters('agentPrefix')]",
      "apiVersion": "2015-04-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "profiles": [
          {
            "name": "DefaultProfile",
            "capacity": {
              "minimum": "[parameters('minAgentCount')]",
              "maximum": "[parameters('maxAgentCount')]",
              "default": "[parameters('agentCount')]"
            },
            "rules": [
              {
                "metricTrigger": {
                  "metricName": "Percentage CPU",
                  "metricNamespace": "",
                  "metricResourceUri": "[resourceId('Microsoft.Compute/virtualMachineScaleSets', parameters('agentPrefix'))]",
                  "timeGrain": "PT1M",
                  "statistic": "Average",
                  "timeWindow": "PT5M",
                  "timeAggregation": "Average",
                  "operator": "GreaterThan",
                  "threshold": 80
                },
                "scaleAction": {
                  "direction": "Increase",
                  "type": "ChangeCount",
                  "value": "1",
                  "cooldown": "PT5M"
                }
              },
              {
                "metricTrigger": {
                  "metricName": "Percentage CPU",
                  "metricNamespace": "",
                  "metricResourceUri": "[resourceId('Microsoft.Compute/virtualMachineScaleSets', parameters('agentPrefix'))]",
                  "timeGrain": "PT1M",
                  "statistic": "Average",
                  "timeWindow": "PT5M",
                  "timeAggregation": "Average",
                  "operator": "LessThan",
                  "threshold": 10
                },
                "scaleAction": {
                  "direction": "Decrease",
                  "type": "ChangeCount",
                  "value": "1",
                  "cooldown": "PT5M"
                }
              }
            ]
          }
        ],
        "enabled": true,
        "name": "[parameters('agentPrefix')]",
        "targetResourceUri": "[resourceId('Microsoft.Compute/virtualMachineScaleSets', parameters('agentPrefix'))]"
      },
      "resources": [],
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachineScaleSets', parameters('agentPrefix'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/availabilitySets",
      "name": "masters",
      "sku": {
        "name": "Aligned"
      },
      "apiVersion": "2019-03-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "platformFaultDomainCount": "[parameters('asFDCount')]",
        "platformUpdateDomainCount": "[parameters('asUDCount')]"
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "copy": {
        "name": "clusterMasterNetworkInterfaces",
        "count": "[parameters('masterCount')]"
      },
      "name": "[concat(parameters('masterPrefix'),copyIndex())]",
      "apiVersion": "2017-06-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "primary": true,
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', 'cluster'), '/subnets/', 'masters')]"
              },
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[concat('10.1.0.',add(10,copyIndex()))]",
              "publicIpAddress": {
                "id": "[resourceId('Microsoft.Network/publicIpAddresses', concat(parameters('masterPrefix'), copyIndex()))]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', concat(parameters('masterPrefix'), copyIndex()))]"
        }
      },
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', 'cluster')]",
        "[concat('Microsoft.Network/publicIpAddresses/', parameters('masterPrefix'), copyIndex())]",
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('masterPrefix'), copyIndex())]"
      ]
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(parameters('masterPrefix'), copyIndex())]",
      "copy": {
        "name": "clusterMasterPublicIPAddresses",
        "count": "[parameters('masterCount')]"
      },
      "apiVersion": "2017-06-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[concat(resourceGroup().name, '-', parameters('masterPrefix'), copyIndex())]"
        }
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "copy": {
        "name": "clusterMasterNetworkSecurityGroup",
        "count": "[parameters('masterCount')]"
      },
      "name": "[concat(parameters('masterPrefix'), copyIndex())]",
      "apiVersion": "2017-06-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "default-allow-ssh",
            "properties": {
              "priority": 1000,
              "sourceAddressPrefixes": "[parameters('masterManagementAllowedSourceAddressPrefixes')]",
              "protocol": "Tcp",
              "destinationPortRange": "[parameters('masterSSHPort')]",
              "access": "Allow",
              "direction": "Inbound",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          },
          {
            "name": "default-allow-http",
            "properties": {
              "priority": 1001,
              "sourceAddressPrefixes": "[parameters('masterIngressAllowedSourceAddressPrefixes')]",
              "protocol": "Tcp",
              "destinationPortRange": "80",
              "access": "Allow",
              "direction": "Inbound",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          },
          {
            "name": "default-allow-https",
            "properties": {
              "priority": 1003,
              "sourceAddressPrefixes": "[parameters('masterIngressAllowedSourceAddressPrefixes')]",
              "protocol": "Tcp",
              "destinationPortRange": "443",
              "access": "Allow",
              "direction": "Inbound",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          },
          {
            "name": "default-allow-managment-http",
            "properties": {
              "priority": 1004,
              "sourceAddressPrefixes": "[parameters('masterManagementAllowedSourceAddressPrefixes')]",
              "protocol": "Tcp",
              "destinationPortRange": "8080",
              "access": "Allow",
              "direction": "Inbound",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          }
        ]
      }
    }
  ]
}
